% Generated by ADiMat 0.6.6-5530 (00419e1f)
% © 2001-2008 Andre Vehreschild <vehreschild@sc.rwth-aachen.de>
% © 2009-2018 Johannes Willkomm <johannes@johannes-willkomm.de>
% TU Darmstadt, 64289 Darmstadt, Germany
% Visit us on the web at http://www.adimat.de/
% Report bugs to johannes@johannes-willkomm.de
%
%                             DISCLAIMER
% 
% ADiMat was prepared as part of an employment at the Institute for Scientific Computing,
% RWTH Aachen University, Germany and at the Institute for Scientific Computing,
% TU Darmstadt, Germany and is provided AS IS. 
% NEITHER THE AUTHOR(S), THE GOVERNMENT OF THE FEDERAL REPUBLIC OF GERMANY
% NOR ANY AGENCY THEREOF, NOR THE RWTH AACHEN UNIVERSITY, NOT THE TU DARMSTADT,
% INCLUDING ANY OF THEIR EMPLOYEES OR OFFICERS, MAKES ANY WARRANTY, EXPRESS OR IMPLIED,
% OR ASSUMES ANY LEGAL LIABILITY OR RESPONSIBILITY FOR THE ACCURACY, COMPLETENESS,
% OR USEFULNESS OF ANY INFORMATION OR PROCESS DISCLOSED, OR REPRESENTS THAT ITS USE
% WOULD NOT INFRINGE PRIVATELY OWNED RIGHTS.
%
% Parameters:
%  - dependents=y
%  - independents=x
%  - inputEncoding=ISO-8859-1
%
% Functions in this file: a_rosenbrock, rec_rosenbrock,
%  ret_rosenbrock
%

function [a_x nr_y] = a_rosenbrock(x, a_y)
   tmpca6 = 1 - x(1);
   tmpca5 = tmpca6 .^ 2;
   tmpca4 = x(1) .^ 2;
   tmpca3 = x(2) - tmpca4;
   tmpca2 = tmpca3 .^ 2;
   tmpca1 = 100 * tmpca2;
   y = tmpca1 + tmpca5;
   nr_y = y;
   [a_tmpca1 a_tmpca2 a_tmpca3 a_tmpca4 a_tmpca5 a_tmpca6 a_x] = a_zeros(tmpca1, tmpca2, tmpca3, tmpca4, tmpca5, tmpca6, x);
   if nargin < 2
      a_y = a_zeros1(y);
   end
   a_tmpca1 = adimat_adjsum(a_tmpca1, adimat_adjred(tmpca1, a_y));
   a_tmpca5 = adimat_adjsum(a_tmpca5, adimat_adjred(tmpca5, a_y));
   a_tmpca2 = adimat_adjsum(a_tmpca2, adimat_adjmultr(tmpca2, 100, a_tmpca1));
   a_tmpca3 = adimat_adjsum(a_tmpca3, adimat_adjred(tmpca3, 2 .* tmpca3.^1 .* a_tmpca2));
   a_x = adimat_adjsum(a_x, adimat_adjsubsref(x, adimat_adjred(x(2), a_tmpca3), 2));
   a_tmpca4 = adimat_adjsum(a_tmpca4, adimat_adjred(tmpca4, -a_tmpca3));
   a_x = adimat_adjsum(a_x, adimat_adjsubsref(x, adimat_adjred(x(1), 2 .* x(1).^1 .* a_tmpca4), 1));
   a_tmpca6 = adimat_adjsum(a_tmpca6, adimat_adjred(tmpca6, 2 .* tmpca6.^1 .* a_tmpca5));
   a_x = adimat_adjsum(a_x, adimat_adjsubsref(x, adimat_adjred(x(1), -a_tmpca6), 1));
end

function y = rec_rosenbrock(x)
   tmpca6 = 1 - x(1);
   tmpca5 = tmpca6 .^ 2;
   tmpca4 = x(1) .^ 2;
   tmpca3 = x(2) - tmpca4;
   tmpca2 = tmpca3 .^ 2;
   tmpca1 = 100 * tmpca2;
   y = tmpca1 + tmpca5;
   adimat_push(tmpca1, tmpca2, tmpca3, tmpca4, tmpca5, tmpca6, y, x);
end

function a_x = ret_rosenbrock(a_y)
   [x y tmpca6 tmpca5 tmpca4 tmpca3 tmpca2 tmpca1] = adimat_pop;
   [a_tmpca1 a_tmpca2 a_tmpca3 a_tmpca4 a_tmpca5 a_tmpca6 a_x] = a_zeros(tmpca1, tmpca2, tmpca3, tmpca4, tmpca5, tmpca6, x);
   if nargin < 1
      a_y = a_zeros1(y);
   end
   a_tmpca1 = adimat_adjsum(a_tmpca1, adimat_adjred(tmpca1, a_y));
   a_tmpca5 = adimat_adjsum(a_tmpca5, adimat_adjred(tmpca5, a_y));
   a_tmpca2 = adimat_adjsum(a_tmpca2, adimat_adjmultr(tmpca2, 100, a_tmpca1));
   a_tmpca3 = adimat_adjsum(a_tmpca3, adimat_adjred(tmpca3, 2 .* tmpca3.^1 .* a_tmpca2));
   a_x = adimat_adjsum(a_x, adimat_adjsubsref(x, adimat_adjred(x(2), a_tmpca3), 2));
   a_tmpca4 = adimat_adjsum(a_tmpca4, adimat_adjred(tmpca4, -a_tmpca3));
   a_x = adimat_adjsum(a_x, adimat_adjsubsref(x, adimat_adjred(x(1), 2 .* x(1).^1 .* a_tmpca4), 1));
   a_tmpca6 = adimat_adjsum(a_tmpca6, adimat_adjred(tmpca6, 2 .* tmpca6.^1 .* a_tmpca5));
   a_x = adimat_adjsum(a_x, adimat_adjsubsref(x, adimat_adjred(x(1), -a_tmpca6), 1));
end
